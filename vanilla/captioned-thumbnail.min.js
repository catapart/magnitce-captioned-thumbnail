var a=`\r
\r
:host\r
{\r
    display: inline-flex;\r
    width: 80px;\r
    height: 80px;\r
    color-scheme: light dark;\r
}\r
\r
:host(:focus) figure\r
{\r
    border-color: rgb(205 205 205);\r
}\r
@media (prefers-color-scheme: dark) \r
{\r
    :host(:focus) figure\r
    {\r
        border-color: rgb(81 81 81);\r
    }\r
}\r
\r
figure\r
{\r
    flex: 1;\r
    display: grid;\r
    grid-template-rows: 1fr auto;\r
    margin: 0;\r
    padding: 0;\r
    border: solid 1px transparent;\r
}\r
:host(.selected) figure\r
{\r
    border-color: inherit;\r
}\r
\r
#selected\r
,::slotted([slot="selected"])\r
{\r
    grid-column: 1;\r
    grid-row: 1;\r
\r
    justify-self: flex-start;\r
    align-self: flex-start;\r
    z-index: 2;\r
\r
    opacity: 0;\r
    transition: opacity 200ms ease;\r
}\r
\r
:host(:not([select],[selectable])) #selected\r
,:host(:not([select],[selectable])) ::slotted([slot="selected"])\r
{\r
    display: none;\r
    pointer-events: none;\r
}\r
\r
#edit-button\r
,::slotted([slot="edit-button"])\r
{\r
    grid-column: 1;\r
    grid-row: 1;\r
\r
    justify-self: flex-end;\r
    align-self: flex-start;\r
    z-index: 2;\r
\r
    opacity: 0;\r
    transition: opacity 200ms ease;\r
}\r
\r
:host(:not([edit],[editable])) #edit-button\r
,:host(:not([edit],[editable])) ::slotted([slot="edit-button"])\r
{\r
    display: none;\r
    pointer-events: none;\r
}\r
\r
.icon\r
,::slotted([slot="icon"])\r
{\r
    grid-column: 1;\r
    grid-row: 1;\r
\r
    justify-self: center;\r
    align-self: center;\r
\r
    width: var(--icon-width, var(--icon-size));\r
    margin: .25em;\r
}\r
#image-icon\r
,::slotted(img[slot="icon"])\r
{\r
    display: block;\r
    max-width: 100%;\r
    min-width: 0;\r
    max-height: 100%;\r
    min-height: 0;\r
}\r
#text-icon\r
{\r
    font-size: 36px;\r
    line-height: 1;\r
    margin: 0;\r
    padding: 0;\r
    box-sizing: border-box;\r
}\r
\r
:host(:not([src])) #image-icon\r
,:host([src]) #text-icon\r
{\r
    display: none;\r
}\r
\r
#caption\r
,::slotted([slot="caption"])\r
{\r
    text-align: center;\r
    text-overflow: ellipsis;\r
    overflow: hidden;\r
}\r
\r
:host(:not([select],[selectable]):hover)  #edit-button\r
,:host(:not([select],[selectable]):hover) ::slotted([slot="edit-button"])\r
,:host(:focus)  #edit-button\r
,:host(:focus) ::slotted([slot="edit-button"])\r
,figure:has(:checked) #edit-button\r
,figure:has(:checked) ::slotted([slot="edit-button"])\r
,figure:has(:focus) #edit-button\r
,figure:has(:focus) ::slotted([slot="edit-button"])\r
,figure:has(:focus-within) #edit-button\r
,figure:has(:focus-within) ::slotted([slot="edit-button"])\r
{ \r
    opacity: 1;\r
}\r
\r
\r
:host(:hover) #selected\r
,figure:has(:checked) #selected\r
,figure:focus #selected\r
,figure:focus-within #selected\r
{ \r
    opacity: 1;\r
}`;var r=`<figure id="figure">\r
    <slot name="selected"><input type="checkbox" id="selected" /></slot>\r
    <slot name="edit-button"><button type="button" id="edit-button">&#9998;</button></slot>\r
    <slot name="icon">\r
        <span id="text-icon" class="icon">\u{1F5CE}</span>\r
        <img id="image-icon" class="icon" />\r
    </slot>\r
    <slot name="caption"><figcaption id="caption"><slot>Item</slot></figcaption></slot>\r
</figure>`;var u=new CSSStyleSheet;u.replaceSync(a);var h="captioned-thumbnail",n=class l extends HTMLElement{componentParts=new Map;getElement(t){if(this.componentParts.get(t)==null){let s=this.findElement(t);s!=null&&this.componentParts.set(t,s)}return this.componentParts.get(t)}findElement(t){return this.shadowRoot.getElementById(t)}static selectedClassName="selected";get isSelected(){return this.classList.contains(l.selectedClassName)}set isSelected(t){if(this.getAttribute("select")??this.getAttribute("selectable")==null)return;t==!0?this.classList.add(l.selectedClassName):this.classList.remove(l.selectedClassName);let s=this.findElement("selected");s!=null&&(s.checked=t)}constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=r,this.shadowRoot.adoptedStyleSheets.push(u),this.#e(),this.#t(),this.shadowRoot.querySelector("slot:not([name])").addEventListener("slotchange",t=>{this.#t()}),this.addEventListener("keydown",t=>{this.shadowRoot.activeElement==this.findElement("figure")&&t.code=="Space"&&(this.isSelected=!this.isSelected)}),this.addEventListener("click",t=>{this.hasAttribute("stop-click")==!0&&t.stopPropagation();let s=t.composedPath().find(i=>i instanceof HTMLElement&&(i.id=="edit-button"||i.getAttribute("slot")=="edit-button"));if(s!=null){this.dispatchEvent(new CustomEvent("edit",{detail:{button:s,item:this},bubbles:!0,composed:!0}));return}if(this.getAttribute("select")??this.getAttribute("selectable")==null)return;let e=this.findElement("selected");if(e!=null){let i=this.classList.contains(l.selectedClassName),o=i==e.checked?"click":"input",c=t,d=this.dispatchEvent(new CustomEvent("change",{bubbles:!0,composed:!0,cancelable:!0,detail:{shiftKey:c.shiftKey,ctrlKey:c.ctrlKey,method:o}}));if(console.log("allowDefault",d),d==!1)return;i==!0?(this.classList.remove(l.selectedClassName),e.checked=!1):(this.classList.add(l.selectedClassName),e.checked=!0)}})}#e(){let t=[...this.shadowRoot.querySelectorAll("[id]")];for(let e=0;e<t.length;e++)t[e].part.add(t[e].id);let s=[...this.shadowRoot.querySelectorAll("[class]")];for(let e=0;e<s.length;e++)s[e].part.add(...s[e].classList)}#t(){let t="";for(let s=0;s<this.childNodes.length;s++){let e=this.childNodes[s];if(e.nodeType==Node.TEXT_NODE){let i=e.textContent?.trim()??"";i!=""&&(t+=i)}}t.trim()==""&&(t=this.findElement("caption").textContent),this.title=t}updateImage(t){let s=this.findElement("image-icon");s.src=t}static observedAttributes=["label","src","select","selectable"];attributeChangedCallback(t,s,e){if(t=="label"){let i=Array.from(this.childNodes).filter(o=>o.nodeType==Node.TEXT_NODE);for(let o=0;o<i.length;o++)i[o].remove();this.append(e),this.#t()}else t=="src"?this.updateImage(e):(t=="select"||t=="selectable")&&(this.findElement("figure").tabIndex=0)}};customElements.get(h)==null&&customElements.define(h,n);export{n as CaptionedThumbnailElement};
